{"version":3,"file":"component---src-templates-blog-post-js-130d686b9b9ba94203cf.js","mappings":"iOAoGA,EA7FiC,SAAH,GAAyC,IAAD,EAAlCA,EAAI,EAAJA,KAAMC,EAAQ,EAARA,SAClCC,GADuD,EAAXC,YACrCH,EAAKI,gBAEZC,EADeL,EAAdM,WAC0BC,MAAMC,QAAO,SAACC,EAAKC,GAAC,8BAAWD,IAAG,MAAGC,EAAEC,KAAKC,MAAOF,EAAEC,KAAKE,gBAAe,MAAK,CAAC,GAC1GC,GAAkC,QAAtB,EAAAd,EAAKe,KAAKC,oBAAY,aAAtB,EAAwBC,QAAK,QACvCC,EAAmBlB,EAAnBkB,SAAUC,EAASnB,EAATmB,KACZC,GAAaC,EAAAA,EAAAA,GAASnB,EAAKoB,YAAYF,YACvCG,EAASrB,EAAKoB,YAAYC,MAEhC,OACE,gBAAC,IAAM,CAACtB,SAAUA,EAAUgB,MAAOH,GACjC,gBAAC,IAAG,CACFG,MAAOf,EAAKoB,YAAYL,MACxBO,YAAatB,EAAKoB,YAAYE,aAAetB,EAAKuB,UAEpD,2BACIL,GACA,gBAAC,EAAAM,EAAW,CAACC,MAAOP,EAAYQ,UCvBvB,oCD0Bb,2BACEA,UCvBiB,uCDwBjBC,WAAS,EACTC,SAAS,6BAET,0BAAQF,UC1BG,kCD2BT,sBAAIG,SAAS,YAAY7B,EAAKoB,YAAYL,QAG5C,2BACEe,wBAAyB,CAAEC,OAAQ/B,EAAKgC,MACxCH,SAAS,gBAEVR,GAAUA,EAAMY,OAAS,GAC1B,2BAASC,GAAG,QAAQR,UCrCT,kCDsCT,0BAAI,iBACJ,0BACGL,EAAMd,KAAI,SAAC4B,EAAM3B,GAChB,IAAM4B,EAAWjC,EAAcgC,EAAKV,OAC9BY,EAAYD,IAAYjB,EAAAA,EAAAA,GAASiB,GACvC,OACE,sBAAIE,IAAK9B,GACP,gBAAC,EAAA+B,KAAI,CAACC,GAAIzC,EAAS0C,SAAYN,EAAKV,MAAMiB,MAAM,KAAK,GAAI3B,MAAOoB,EAAKpB,OACnE,8BACGsB,EACC,gBAAC,EAAAb,EAAW,CAACE,UCjDZ,uCDiD2CD,MAAOY,IAEnD,uBAAKX,UCpDL,wCDsDF,kCAAaS,EAAKpB,SAK5B,MAIJ,2BACA,gCAIF,uBAAKW,UAAU,iBACb,sBACEiB,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACGhC,GACC,gBAAC,EAAAuB,KAAI,CAACC,GAAIxB,EAASiC,OAAOC,KAAMC,IAAI,OAAOpC,MAAOC,EAASI,YAAYL,OAAO,aAKlF,0BACGE,GACC,gBAAC,EAAAsB,KAAI,CAACC,GAAIvB,EAAKgC,OAAOC,KAAMC,IAAI,OAAOpC,MAAOE,EAAKG,YAAYL,OAAQ,WASrF,C","sources":["webpack://gatsby-starter-blog/./src/templates/blog-post.js","webpack://gatsby-starter-blog/./src/templates/blog-post.module.css"],"sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport * as styles from \"./blog-post.module.css\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst PortfolioProjectTemplate = ({ data, location, pageContext }) => {\n  const post = data.markdownRemark\n  const {itemImages} = data;\n  const itemImagesMap = itemImages.edges.reduce((map, i) => ({ ...map, [i.node.base]: i.node.childImageSharp }), {});\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n  const coverImage = getImage(post.frontmatter.coverImage)\n  const items  = post.frontmatter.items\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <div>\n        { coverImage &&\n          <GatsbyImage image={coverImage} className={styles.cover} />\n        }\n      </div>\n      <article\n        className={styles.projectPage}\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header className={styles.title}>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          {/*<p>{post.frontmatter.date}</p>*/}\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        {items && (items.length > 0) &&\n        <section id=\"items\" className={styles.items}>\n          <h2>Project items</h2>\n          <ul>\n            {items.map((item, i) => {\n              const theImage = itemImagesMap[item.image]\n              const itemImage = theImage && getImage(theImage)\n              return (\n                <li key={i}>\n                  <Link to={location.pathname  + item.image.split(\".\")[0]} title={item.title}>\n                    <figure>\n                      {itemImage ?\n                        <GatsbyImage className={styles.gatsbyImage} image={itemImage}/>\n                        :\n                        <div className={styles.emptyImage} />\n                      }\n                      <figcaption>{item.title}</figcaption>\n                    </figure>\n                  </Link>\n                </li>\n              )\n            })}\n          </ul>\n        </section>\n        }\n        <hr />\n        <footer>\n\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\" title={previous.frontmatter.title}>\n                previous\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\" title={next.frontmatter.title} >\n                next\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default PortfolioProjectTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n    $itemsDir: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        items {\n          title\n          image\n        }\n        coverImage {\n          childImageSharp {\n            gatsbyImageData(layout:FULL_WIDTH)\n          }\n        }\n      }\n    }\n    itemImages: allFile(filter: {relativeDirectory: {eq: $itemsDir}}) {\n      edges {\n        node {\n          base\n          relativeDirectory\n          childImageSharp {\n            gatsbyImageData(layout:FIXED, width: 300, aspectRatio: 1)\n          }\n        }\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n","// extracted by mini-css-extract-plugin\nexport var cover = \"blog-post-module--cover--b8f10\";\nexport var emptyImage = \"blog-post-module--emptyImage--d4f69\";\nexport var gatsbyImage = \"blog-post-module--gatsbyImage--c7412\";\nexport var items = \"blog-post-module--items--c9e7c\";\nexport var projectPage = \"blog-post-module--projectPage--3d26c\";\nexport var title = \"blog-post-module--title--59a7d\";"],"names":["data","location","post","pageContext","markdownRemark","itemImagesMap","itemImages","edges","reduce","map","i","node","base","childImageSharp","siteTitle","site","siteMetadata","title","previous","next","coverImage","getImage","frontmatter","items","description","excerpt","G","image","className","itemScope","itemType","itemProp","dangerouslySetInnerHTML","__html","html","length","id","item","theImage","itemImage","key","Link","to","pathname","split","style","display","flexWrap","justifyContent","listStyle","padding","fields","slug","rel"],"sourceRoot":""}